package atm.view;

import atm.model.bank.Bank;

/**
 * Created by sjshin on 2016-03-24.
 */
public enum MessageCode {
	//000 성공
	//101
	//1. 화면에 환영 메시지가 출력되고 사용자에게 계좌 번호 입력을 요구하는 메시지가 출력
	//3. 화면에 지정된 계좌 번호와 연계된 PIN을 입력하라는 메시지 출력
	//5. 사용자가 올바른 계좌 번호와  PIN을 입력한다면 주 메뉴가 화면에 출력되고, 틀린 계좌 번호나 PIN을 입력한다면, 화면은 적절한 메시지를 출력한 후 다시 1단계로 넘어간다.
	//7. ATM이 사용자를 인증한 후에 메인 화면은 잔액 조회(옵션1), 출금(옵션2), 입금(옵션3), 시스템 종료(옵션4)으로 구성된 주 메뉴를 출력한다.
	//8. 사용자가 잔액 조회를 위해 1을 누르면, 화면은 사용자의 계좌 잔액을 출력한다. 이를 위해 ATM은 은행의 DB에서 잔액을 검색해야 한다.
	//9.1 화면은 일반 출금 금액인 $20(옵션 1), $40(옵션 2), $60(옵션 3), $100(옵션 4), $200(옵션 5)와 같은 메뉴를 출력한다. 이 메뉴는 거래를 취소할 수 있는 옵션(옵션 6)도 포함한다.
	//9.3 만약 출금액이 사용자의 계좌 잔액보다 크면, 화면은 이 상태를 메시지로 보여주고, 더 작은 금액을 선택하도록 알려준다.
	//그리고 ATM은 9.1단계로 넘어간다. 만약 출금 금액이 현재 잔액보다 작거나 같은 금액으로 선택되면 ATM은 4단계를 수행한다. 사용자가 거래 취소(옵션 6)을 선택하면, ATM은 메인 화면을 표시하고 사용자의 입력을 기다린다.
	//9.4 현금 지급기가 고객의 요청을 만족시킬 만큼의 현금을 가지고 있다면, ATM은 5단계를 수행하고, 그렇지 않으면 문제가 있음을 화면에 표시하고 더 작은 출금 금액을 선택하도록 요청한다. ATM은 9.1 단계로 넘어간다.

	CODE_101(101, "안녕하세요."),
	CODE_102(102, "은행을 선택해주세요. 1 : " +  Bank.BankName.WOORI.name() + "    2 : " + Bank.BankName.HANA.name()),
	CODE_103(103, "계좌번호를 입력해주세요.(숫자 5자리)"),
	CODE_104(104, "메인 화면 : 잔액 조회(옵션1), 출금(옵션2), 입금(옵션3), 시스템 종료(옵션4)"),
	CODE_105(105, "출금금액을 입력해주세요."),
	CODE_106(106, "입금금액을 입력해주세요."),
	CODE_107(107, "비밀번호를 입력해주세요."),

	CODE_001(001, "계좌번호 자릿수가 맞지 않습니다. 5자리로 입력해주세요."),
	CODE_002(002, "입금/출금이 정상처리 되지 않았습니다. 다시 메뉴를 선택해 주세요."),

	CODE_003(003, "계좌번호 입력이 성공하였습니다."),

	CODE_011(011, "비밀번호 자릿수가 맞지 않습니다. 5자리로 입력해주세요."),
	CODE_012(012, "비밀번호가 일치 하지 않습니다. 다시 입력해 주세요."),
	CODE_013(013, "고객님 계좌의 잔액이 부족합니다."),
	CODE_014(014, "Atm의 잔액이 부족합니다."),
	CODE_015(015, "출금이 완료되었습니다."),
	CODE_016(016, "입금이 완료되었습니다."),


	CODE_020(016, "시스템을 종료합니다.");



	private int code;
	private String message;

	MessageCode(int code, String message) {
		this.code = code;
		this.message = message;
	}

	public int getCode() {
		return this.code;
	}

	public String getMessage() {
		return this.message;
	}
}
